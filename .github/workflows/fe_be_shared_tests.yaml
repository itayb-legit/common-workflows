name: Shared Lint And Tests
on:
  workflow_call:
    inputs:
      SHOULD_BUILD_DOCKER:
        required: true
        type: boolean
      RUNTIME:
        required: true
        type: string
      TESTS:
        type: boolean
        required: true
      UNIT_TESTS:
        type: boolean
        default: false
        required: false
      RUNTIME_VERSION:
        type: string
        required: true
      RUN_TS_PRUNE:
        type: boolean
        required: false
        default: false
      TSCONFIG_FILE:
        type: string
        required: false
        default: "tsconfig.json"
      SERVICE_DIR_PATH:
        type: string
        required: false
        default: "."
jobs:

  check-if-helm-values-changed:
    continue-on-error: true
    outputs:
      some_changed: ${{ steps.file-check.outputs.some_changed }}
      all_changed: ${{ steps.file-check.outputs.all_changed }}
      dev_changed: ${{ steps.file-check.outputs.dev_changed }}
      staging_changed: ${{ steps.file-check.outputs.staging_changed }}
      prod_changed: ${{ steps.file-check.outputs.prod_changed }}
    # if: ${{ github.event_name == 'push' }}
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # ratchet:actions/checkout@v4
        with:
          fetch-depth: 0
    #   - name: Configure AWS Credentials
    #     uses: aws-actions/configure-aws-credentials@48f0cb78484f48158b435f99ba5f1e3171322334
    #     with:
    #       aws-access-key-id: ${{ secrets.HELM_S3_ACCESS_KEY_ID }}
    #       aws-secret-access-key: ${{ secrets.HELM_S3_SECRET_ACCESS_KEY }}
    #       role-to-assume: ${{ secrets.READ_SECRETS_ROLE_PROD }}
    #       role-duration-seconds: 3600
    #       aws-region: us-east-1
    #   - name: Read secrets from AWS Secrets Manager into environment variables
    #     uses: aws-actions/aws-secretsmanager-get-secrets@f91b2a3e784edce744f972af1685eca7e24d2302 # ratchet:aws-actions/aws-secretsmanager-get-secrets@v2
    #     with:
    #       secret-ids: |
    #         slack/hooks
    #       parse-json-secrets: true
      - name: Check for file changes
        id: file-check
        run: |
          # Get SHA of the most recent commit and its predecessor
          LATEST_SHA=$(git rev-parse HEAD)
          PREV_SHA=$(git rev-parse HEAD~1)

          echo "LATEST_SHA=$LATEST_SHA"
          echo "PREV_SHA=$PREV_SHA"

          # Check for changes in specific files between these two commits
          DEV_CHANGED=$(git diff --name-only $PREV_SHA $LATEST_SHA -- helm/values/dev.yaml)
          echo "DEV_CHANGED=$DEV_CHANGED"
          STAGING_CHANGED=$(git diff --name-only $PREV_SHA $LATEST_SHA -- helm/values/stage.yaml)
          echo "STAGING_CHANGED=$STAGING_CHANGED"
          PROD_CHANGED=$(git diff --name-only $PREV_SHA $LATEST_SHA -- helm/values/prod.yaml)
          echo "PROD_CHANGED=$PROD_CHANGED"

          if [ -n "$DEV_CHANGED" ]; then
            echo "DEV_CHANGED=true" >> $GITHUB_ENV
            echo "dev_changed=true" >> $GITHUB_OUTPUT
          else
            echo "DEV_CHANGED=false" >> $GITHUB_ENV
          fi

          if [ -n "$STAGING_CHANGED" ]; then
            echo "STAGING_CHANGED=true" >> $GITHUB_ENV
            echo "staging_changed=true" >> $GITHUB_OUTPUT
          else
            echo "STAGING_CHANGED=false" >> $GITHUB_ENV
          fi

          if [ -n "$PROD_CHANGED" ]; then
            echo "PROD_CHANGED=true" >> $GITHUB_ENV
            echo "prod_changed=true" >> $GITHUB_OUTPUT
          else
            echo "PROD_CHANGED=false" >> $GITHUB_ENV
          fi

          # Set environment variables based on the detection of changes
          if [ -n "$DEV_CHANGED" ] && [ -n "$STAGING_CHANGED" ] && [ -n "$PROD_CHANGED" ]; then
            echo "all_changed=true" >> $GITHUB_OUTPUT
          elif [ -n "$DEV_CHANGED" ] || [ -n "$STAGING_CHANGED" ] || [ -n "$PROD_CHANGED" ]; then
            echo "some_changed=true" >> $GITHUB_OUTPUT
          fi

        
  notify-user-helm-values-changed:
    needs: check-if-helm-values-changed
    if: ${{ needs.check-if-helm-values-changed.outputs.some_changed == 'true' && needs.check-if-helm-values-changed.outputs.all_changed != 'true' }}
    runs-on: ubuntu-latest
    steps:

      # - name: AWS Credentials
      #   uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # ratchet:aws-actions/configure-aws-credentials@v4
      #   with:
      #     aws-access-key-id: ${{ secrets.HELM_S3_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.HELM_S3_SECRET_ACCESS_KEY }}
      #     role-to-assume: ${{ secrets.HELM_S3_ROLE }}
      #     role-duration-seconds: 3600
      #     aws-region: us-east-1
      #     role-session-name: CodeArtifactUploadSession


      # - name: Read secrets from AWS Secrets Manager into environment variables
      #   uses: aws-actions/aws-secretsmanager-get-secrets@f91b2a3e784edce744f972af1685eca7e24d2302 # ratchet:aws-actions/aws-secretsmanager-get-secrets@v2
      #   with:
      #     secret-ids: |
      #       slack/hooks
      #     parse-json-secrets: true


      - run: |
          echo "dev changed : ${{ needs.check-if-helm-values-changed.outputs.dev_changed }}"
          echo "stage changed : ${{ needs.check-if-helm-values-changed.outputs.staging_changed }}"
          echo "prod changed : ${{ needs.check-if-helm-values-changed.outputs.prod_changed }}"
          echo "some  changed : ${{ needs.check-if-helm-values-changed.outputs.some_changed }}"
          echo "all changed : ${{ needs.check-if-helm-values-changed.outputs.all_changed }}"
        name: Debug

      - name: Prepare Slack Message
        run: |
          REPO_URL="https://github.com/${{ github.repository }}"
          MESSAGE="Changes detected in the repo $REPO_URL - "
          CHANGES=()
          UNCHANGED=()

          if [ "${{ needs.check-if-helm-values-changed.outputs.dev_changed }}" == "true" ]; then
            CHANGES+=("you changed the DEV helm values file")
          else
            UNCHANGED+=("didn't change DEV")
          fi

          if [ "${{ needs.check-if-helm-values-changed.outputs.staging_changed }}" == "true" ]; then
            CHANGES+=("you changed the STAGING helm values file")
          else
            UNCHANGED+=("didn't change STAGING")
          fi

          if [ "${{ needs.check-if-helm-values-changed.outputs.prod_changed }}" == "true" ]; then
            CHANGES+=("you changed the PROD helm values file")
          else
            UNCHANGED+=("didn't change PROD")
          fi

          # Concatenate changes and unchanged messages
          if [ ${#CHANGES[@]} -ne 0 ]; then
            MESSAGE+="${CHANGES[*]}, "
          fi
          if [ ${#UNCHANGED[@]} -ne 0 ]; then
            MESSAGE+="but ${UNCHANGED[*]}."
          fi

          # Improve readability by adjusting the comma and 'and' placement
          MESSAGE=$(echo $MESSAGE | sed 's/ , /, and /g') # Replace the last comma with 'and'

          # Add the suffix
          MESSAGE+="Please make sure this was intended."

          echo "SLACK_MESSAGE<<EOF" >> $GITHUB_ENV
          echo "$MESSAGE" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

          echo $MESSAGE

      # - name: Notify Slack
      #   uses: rtCamp/action-slack-notify@28e8b353eabda5998a2e1203aed33c5999944779
      #   env:
      #     SLACK_WEBHOOK: ${{ env.SLACK_HOOKS_ALERTS_DEVOPS }}
      #     SLACK_CHANNEL: alerts-platform
      #     SLACK_COLOR: ${{ job.status }}
      #     SLACK_MESSAGE: ${{ env.SLACK_MESSAGE }}
      #     SLACK_TITLE: Helm Changes Detected in a Repository
          

  update-all-prs:
    # if: ${{ github.event_name == 'push' }}
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # ratchet:actions/checkout@v4
        with:
          repository: itayb-legit/common-workflows
          token: ${{ secrets.GHCR_PAT }}
          
      - name: update branches on merge
        env:
          INPUT_GITHUB_TOKEN: ${{ secrets.GHCR_PAT }}
        uses: ./.github/actions/update-branches


  helm-lint:
    # if: ${{ inputs.SHOULD_BUILD_DOCKER == true && github.event_name == 'pull_request' }}
    runs-on: self-hosted
    steps:
      # - name: AWS Credentials
      #   uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # ratchet:aws-actions/configure-aws-credentials@v4
      #   with:
      #     aws-access-key-id: ${{secrets.HELM_S3_ACCESS_KEY_ID}}
      #     aws-secret-access-key: ${{secrets.HELM_S3_SECRET_ACCESS_KEY}}
      #     role-to-assume: ${{secrets.HELM_S3_ROLE}}
      #     role-duration-seconds: 3600
      #     aws-region: us-east-1

      # - name: Read secrets from AWS Secrets Manager into environment variables
      #   uses: aws-actions/aws-secretsmanager-get-secrets@5cb982bcb88b164e92093d4e3bee94b7b416731f
      #   with:
      #     secret-ids: |
      #       slack/hooks
      #     parse-json-secrets: true

      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # ratchet:actions/checkout@v4

      - name: yaml-lint
        continue-on-error: true
        uses: ibiqlik/action-yamllint@v3
        with:
          file_or_dir: helm/values/*.yaml
          no_warnings: true
          config_data: "{extends: default, rules: {empty-values: {level: error}, line-length: disable, document-start: disable, document-end: disable}}"

      # - name: helm lint
      #   run: |
      #     helm plugin install https://github.com/hypnoglow/helm-s3.git --version 0.14.0 \
      #     && cd ./helm \
      #     && yq e '.appVersion style="double"' -i Chart.yaml \
      #     && AWS_REGION=eu-central-1 helm dep up  \
      #     && helm lint . -f values.yaml -f values.us-eks-staging.yaml \
      #     && helm lint . -f values.yaml -f values.us-eks-prod.yaml \
      #     && cd ..

      - name: helm lint
        run: |
          cd ./helm \
          && yq e '.appVersion style="double"' -i Chart.yaml \
          && helm lint . -f values.yaml -f values/prod.yaml \
          && cd ..
      
      # - name: helm create templates
      #   run: |
      #     mkdir helm-templates \
      #     && cd ./helm \
      #     && helm template . -f values.yaml -f values.us-eks-staging.yaml > ../helm-templates/staging.template.yaml \
      #     && helm template . -f values.yaml -f values.us-eks-prod.yaml > ../helm-templates/prod.template.yaml


      # - name: "Upload templates"
      #   uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # ratchet:actions/upload-artifact@v4
      #   with:
      #     name: helm-templates-${{ github.sha }}
      #     path: helm-templates
